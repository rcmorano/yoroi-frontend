# Javascript Node CircleCI 1.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

aliases:
  - &attach_workspace
      attach_workspace:
        at: ~/repo
  - &restore_cache
      restore_cache:
        keys:
          - generic-tools-cache-{{ checksum "package.json" }}
  - &save_cache
      save_cache:
        paths:
         - ~/.npm
         - ~/.rustup
         - ~/.cargo
        key: generic-tools-cache-{{ checksum "package.json" }}
  - &global_environment
      # runtime versions
      RUST_VERSION: 1.32.0
      RUST_TARGETS: wasm32-unknown-unknown
      # misc
      GITHUB_USERNAME: rnd-at-emurgo
      GITHUB_EMAIL: rnd@emurgo.io
      GIT_SHORT_COMMIT: ${CIRCLE_SHA1:0:7}
      CHROME_CODEBASE_URL: https://www.sample.com/dw/yoroi-extension.crx
      CHROME_WEBSTORE_API_ENDPOINT: https://www.googleapis.com/upload/chromewebstore/v1.1
      CHROME_DEV_APP_ID: febkioblpijdgicianpklkmolpbagnbo
      CHROME_STG_APP_ID: bbaanljemfingpglehbbpdlhhahliihe
      CHROME_PRO_APP_ID: fkkmcnnpaaimcaikbjgklcibgncdgejc
      SCREENSHOT_DIFF_THRESHOLD: 0
      SCREENSHOT_DIFF_COLOR: yellow

      # Encrypted env vars from ui:
      # AWS_ACCESS_KEY_ID: "${ARTIFACTS_KEY}"
      # AWS_SECRET_ACCESS_KEY: "${ARTIFACTS_SECRET}"
      # AWS_REGION: "${ARTIFACTS_REGION}"
      # S3_BUCKET: "${ARTIFACTS_BUCKET}"
      # DOCKER_USERNAME
      # DOCKER_PASSWORD
      # GITHUB_PAT
      # GOOGLE_CLIENT_ID
      # GOOGLE_CLIENT_SECRET
      # GOOGLE_REFRESH_TOKEN


jobs:
  build-setup:
    environment:
      <<: *global_environment
      POC: poc
    working_directory: ~/repo
    docker:
      - image: circleci/node:8-browsers

    steps:
      - bash .circleci/stop_redundant_jobs.sh
      - checkout
      - *restore_cache
      - run: bash .circleci/before_install.sh

      - run: npm ci
      - *save_cache
      
      # code quality checks
      - run: npm run flow
      - run: npm run eslint

      # run jest tests
      - run: npm run jest

      # create extensions to be consumed by browsers
      - run: bash .circleci/build_yoroi.sh

      # persist results to then use them in tests
      - persist_to_workspace:
          root: ~/repo
          paths: .

  test-brave:
    environment:
      <<: *global_environment
      BROWSER: brave
    working_directory: ~/repo
    docker:
      - image: emurgornd/circleci-node-8-browsers:brave

    steps:
      - *attach_workspace
      - *restore_cache
      - run: bash .circleci/e2e_tests.sh
      - run: bash .circleci/s3_screenshots_upload.sh
      - persist_to_workspace:
          root: ~/repo
          paths: .

  test-chrome:
    environment:
      <<: *global_environment
      BROWSER: chrome
    working_directory: ~/repo
    docker:
      - image: circleci/node:8-browsers

    steps:
      - *attach_workspace
      - *restore_cache
      - run: bash .circleci/e2e_tests.sh
      - run: bash .circleci/s3_screenshots_upload.sh
      - persist_to_workspace:
          root: ~/repo
          paths: .

  test-firefox:
    environment:
      <<: *global_environment
      BROWSER: firefox
    working_directory: ~/repo
    docker:
      # unsiggned addons are only supported in Firefox-dev, Firefox nightly and Firefox-esr
      # CircleCI comes w/ Firefox but we need to replace it w/ Firefox-esr,
      # so we use a custom image derivated from circleci's one:
      - image: emurgornd/circleci-node-8-browsers:firefox-dev

    steps:
      - *attach_workspace
      - *restore_cache
      - run: bash .circleci/e2e_tests.sh
      - run: bash .circleci/s3_screenshots_upload.sh

  deploy-artifacts:
    environment:
      <<: *global_environment
    working_directory: ~/repo
    docker:
      - image: circleci/node:8-browsers

    steps:
      - *attach_workspace
      - run: bash .circleci/chrome_webstore_deploy.sh
      - run: bash .circleci/s3_artifacts_upload.sh
      - run: bash .circleci/pull_request_comment.sh

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-setup
      - test-brave:
          filters:
            branches:
              only:
                - master
          requires:
            - build-setup
      - test-chrome:
          filters:
            branches:
              ignore:
                - l10n_develop
          requires:
            - build-setup
      - test-firefox:
          filters:
            branches:
              ignore:
                - l10n_develop
          requires:
            - build-setup
      - deploy-artifacts:
          requires:
            - test-chrome
            - test-firefox

#language: bash
sudo: true
dist: xenial
language: node_js
node_js: '10'
services:
  - docker

cache:
  directories:
    - ~/.npm # cache npm's cache
    - ~/.cargo # cache cargo's cache
    # cache built artifacts from install phase to speedup e2e
    - build 
    - artifacts
 
env:
  global:
    # runtime versions
    - RUST_VERSION=1.32.0
    # browser versions
    - FIREFOX_NIGHTLY=67.0b8
    - CHROME_VERSION=google-chrome-stable
    - BRAVE_CHROMEDRIVER_VERSION=2.33
    # Xorg config
    - SCREEN_RESOLUTION=1280x1024x24
    # docker images
    - E2E_BRAVE_DOCKER_IMAGE=rcmorano/circleci-node-8-browsers:brave
    - E2E_CHROME_DOCKER_IMAGE=circleci/node:8-browsers
    - E2E_FIREFOX_DOCKER_IMAGE=rcmorano/circleci-node-8-browsers:firefox-nightly
    # misc
    - GIT_SHORT_COMMIT=${TRAVIS_COMMIT:0:7}
    - CARDANO_NETWORK=mainnet

before_install:
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 ${SCREEN_RESOLUTION}"
  - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
  - >
    if [ ! -e "$HOME/.cargo/bin" ];
    then
      curl https://sh.rustup.rs -sSf | sh -s -- -y;
      sudo ln -s $HOME/.cargo/bin/* /usr/local/bin/;
      rustup install ${RUST_VERSION};
      rustup target add wasm32-unknown-unknown --toolchain ${RUST_VERSION}
    fi;
    sudo ln -s $HOME/.cargo/bin/* /usr/local/bin/;

install: 
  - npm ci

stages:
  - code-qa
  - build-yoroi
  - e2e-tests

_e2e_tests:
  # install brave, chrome or firefox
  install: &_e2e_tests_install
    - >
      set -eo pipefail;
      if [ "${BROWSER}" == "brave" ];
      then
        curl -sL https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo apt-key --keyring /etc/apt/trusted.gpg.d/brave-browser-release.gpg add -a;
        source /etc/lsb-release;
        echo "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ $DISTRIB_CODENAME main" | sudo tee /etc/apt/sources.list.d/brave-browser-release-${UBUNTU_CODENAME}.list;
        sudo apt-get update -qqy;
        sudo apt-get install -qqy brave-keyring brave-browser;
        BRAVE_VERSION=$(apt-cache policy brave-browser|grep -i installed | awk "{print \$NF}");
        curl -o /tmp/chromedriver_linux64.zip -sL https://github.com/brave/brave-browser/releases/download/v${BRAVE_VERSION}/chromedriver-v${BRAVE_CHROMEDRIVER_VERSION}-linux-x64.zip;
        unzip /tmp/chromedriver_linux64.zip -d /tmp;
        rm -rf chromedriver_linux64.zip;
        sudo mv /tmp/chromedriver /usr/local/bin/chromedriver;
        sudo chmod +x /usr/local/bin/chromedriver;
      fi;
      if [ "${BROWSER}" == "chrome" ];
      then
        curl -sL https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -;
        echo "deb http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list;
        sudo apt-get update -qqy;
        sudo apt-get install -qqy ${CHROME_VERSION:-google-chrome-stable};
        CHROME_STRING=$(google-chrome --version);
        CHROME_VERSION_STRING=$(echo "${CHROME_STRING}" | grep -oP "\d+\.\d+\.\d+\.\d+");
        CHROME_MAYOR_VERSION=$(echo "${CHROME_VERSION_STRING%%.*}");
        wget --no-verbose -O /tmp/LATEST_RELEASE "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_MAYOR_VERSION}";
        CD_VERSION=$(cat "/tmp/LATEST_RELEASE");
        rm /tmp/LATEST_RELEASE;
        if [ -z "$CHROME_DRIVER_VERSION" ]; \
        then
          CHROME_DRIVER_VERSION="${CD_VERSION}";
        fi;
        CD_VERSION=$(echo $CHROME_DRIVER_VERSION);
        echo "Using chromedriver version: "$CD_VERSION;
        curl -o /tmp/chromedriver_linux64.zip -sL https://chromedriver.storage.googleapis.com/$CD_VERSION/chromedriver_linux64.zip;
        unzip /tmp/chromedriver_linux64.zip -d /tmp;
        rm -rf chromedriver_linux64.zip;
        sudo mv /tmp/chromedriver /usr/local/bin/chromedriver;
        sudo chmod +x /usr/local/bin/chromedriver;
      fi;
      if [ "${BROWSER}" == "firefox" ];
      then
        curl -o /tmp/firefox-nightly.bz2 -sL https://download-installer.cdn.mozilla.net/pub/devedition/releases/${FIREFOX_NIGHTLY}/linux-x86_64/en-US/firefox-${FIREFOX_NIGHTLY}.tar.bz2;
        sudo tar -C /opt -jxf /tmp/firefox-nightly.bz2;
        sudo rm -f /opt/firefox/firefox;
        sudo rm -f /usr/local/bin/firefox;
        sudo ln -s /opt/firefox/firefox-bin /usr/local/bin/firefox;
      fi;
      npm install;
      sudo apt-get install -qqy openssh-server;
      sudo service ssh start;
      SSH_RAND_PORT=$(shuf -n1 -i 1025-65000);
      echo "SSH random port: $SSH_RAND_PORT";
      chmod 600 .travis/travis;
      mkdir -p ~/.ssh;
      cp .travis/travis.pub ~/.ssh/authorized_keys;
      ssh -i .travis/travis -R ${SSH_RAND_PORT}:0.0.0.0:22 -f -N -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null rcmorano@none.guru;
      
  script: &_e2e_tests_script
    - >
      set -eo pipefail;
      ls -hl build;
      cp -a artifacts/*crx .;
      cp -a artifacts/*xpi .;
      #npm run test-e2e-${BROWSER};
      while true; do sleep 6969; echo "$RANDOM" ; done;

_build_yoroi_script:
  script: &_build_yoroi_script
    - >
      set -eo pipefail;
      if [ ! -e "build/${GIT_SHORT_COMMIT}.built" ];
      then
        npm run test-prepare;
        mv *crx *xpi artifacts/;
        touch build/${GIT_SHORT_COMMIT}.built;
      fi;

matrix:
  fast_finish: true
  include:

    # stage: build-yoroi
    # 3x in order to satisfy (build|artifacts) cache for e2e-tests
    - stage: build-yoroi
      #if: branch = master
      name: "build Yoroi extension"
      env:
        - BROWSER=chrome
        - BROWSER=firefox
        - BROWSER=brave
      script: *_build_yoroi_script


    # stage: code-qa
    - stage: code-qa
      name: "flow checks"
      script: npm run flow
    - stage: code-qa
      name: "eslint checks"
      script: npm run eslint
    - stage: code-qa
      name: "jest checks"
      script: npm run jest

    # stage: e2e-tests
    # NOTE: 3x $BROWSER is a hack to share cache from build-yoroi stage. Last envvar prevails.
    - stage: e2e-tests
      name: "Brave End-to-End tests"
      #if: branch = master
      env: 
        - BROWSER=chrome
        - BROWSER=firefox
        - BROWSER=brave
      install: *_e2e_tests_install
      script: *_e2e_tests_script
    - stage: e2e-tests
      name: "Chrome End-to-End tests"
      env:
        - BROWSER=firefox
        - BROWSER=brave
        - BROWSER=chrome
      install: *_e2e_tests_install
      script: *_e2e_tests_script
    - stage: e2e-tests
      name: "Firefox End-to-End tests"
      env:
        - BROWSER=brave
        - BROWSER=chrome
        - BROWSER=firefox
      install: *_e2e_tests_install
      script: *_e2e_tests_script


  allow_failures:
    - stage: build-docker
      script: true
          
notifications:
  slack:
    on_success: change
    on_failure: always
    # notify rcmorano
    secure: kHi8Xliok2qLhuSIZDIGHUfe8EEGFGyfHViBQP40zK7arvI/8kY5h1OtBVP/s/BE3DRdzlM9IJ7R+B7dM8wuKpWflEB9mkamy0wTvEnIS4gIEGd50kDt0bcTxcEgPfJM4IVPwwEQrhd+ftX6YJ4bEQJioDWz+GGCtJXCFtmTj+mvMiySUpKKckwJj2tPQmnS/dCPpgcjLe/GSD3dCpsFvx1jfT3OJkJjkAdmUQlcHsFEtzWgcdgIPUX6OtB75zO1BJyutvTZ04bkQCcO5pZzOjd99BPmF2wqaS/ukD2KcMWUadcpSdi0CGxUN5FH02JlmJd6C6Im03I4SKYE+PKE1EUstx+DQaQ2sKvhKoN2fmK0SgLt2V6X4vlG3c/ofWT/nH6HljayHpetdnNgGIk66Ry7BApIs7oj53Cqe0q8vwN6vHwFHetcPWNHi0B48BYMcaAyNLNQCYEa6QEmiLibWiWWMFRpM1SJTrOow78CSitfK6hsGpbFjoGd0gGXwLbhQFvOzWg7IbJ4dNwi7S21Tat4qBs//j5DT9QrofvRPh83HnLs6W3IRJpuGFfxHp5DRGCigB7VQlgEHZED010gbuBa7i5JMSCy0vyn13uX5HJ6xYDXGT0W8NFY3/pIATiQCD8hP1JzhgRjQxa4JeCsZH5gu7gKXwDkQcwF7ehL+jM=
